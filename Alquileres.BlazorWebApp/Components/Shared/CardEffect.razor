<style>
    @@import url("https://fonts.googleapis.com/css?family=Nunito:400,700");

h3 {
  color: #262626;
  font-size: 14px;
  line-height: 24px;
  font-weight: 700;
  margin-bottom: 4px;
}

p {
  font-size: 17px;
  font-weight: 400;
  line-height: 20px;
  color: #666666;

  &.small {
    font-size: 12px;
  }
}

.go-corner {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  width: 32px;
  height: 32px;
  overflow: hidden;
  top: 0;
  right: 0;
  background-color: var(--rz-primary);
  border-radius: 0 4px 0 32px;
}

.go-arrow {
  margin-top: -4px;
  margin-right: -4px;
  color: white;
  font-family: courier, sans;
}

.card1 {

  display: block;
  position: relative;
  max-width: 430px;
        width: 430px;
  height: 90px;
  background-color: var(--rz-success-lighter);
  border-radius: 4px;
  padding: 15px 15px;
  margin: 5px;
  text-decoration: none;
  z-index: 0;
  overflow: hidden;

  &:before {
    content: "";
    position: absolute;
    z-index: -1;
    top: -16px;
    right: -16px;
    background: var(--rz-primary);
    height: 32px;
    width: 32px;
    border-radius: 32px;
    transform: scale(1);
    transform-origin: 50% 50%;
    transition: transform 0.25s ease-out;
  }

  &:hover:before {
    transform: scale(21);
  }
}

.card1:hover {
  p {
    transition: all 0.3s ease-out;
    color: rgba(255, 255, 255, 0.8);
  }
  h3 {
    transition: all 0.3s ease-out;
    color: #ffffff;
  }
}

.card2 {
  display: block;
  top: 0px;
  position: relative;
        width: 430px;
  height: 90px;
  background-color: #D1EFF5;
  border-radius: 4px;
  padding: 15px 15px;
  margin: 5px;
  text-decoration: none;
  z-index: 0;
  overflow: hidden;
  border: 1px solid var(--rz-success-lighter);

  &:hover {
    transition: all 0.2s ease-out;
    box-shadow: 0px 4px 8px rgba(38, 38, 38, 0.2);
    top: -4px;
    border: 1px solid #cccccc;
    background-color: #EBF4F5;
  }

  &:before {
    content: "";
    position: absolute;
    z-index: -1;
    top: -16px;
    right: -16px;
    background: #00838d;
    height: 32px;
    width: 32px;
    border-radius: 32px;
    transform: scale(2);
    transform-origin: 50% 50%;
    transition: transform 0.15s ease-out;
  }

  &:hover:before {
    transform: scale(2.15);
  }
}

.card3 {
  display: block;
  top: 0px;
  position: relative;
  max-width: 430px;
  width: 430px;
  height: 90px;
  background-color: var(--rz-success-lighter);
  border-radius: 4px;
  padding: 15px 15px;
  margin: 5px;
  text-decoration: none;
  overflow: hidden;
  border: 1px solid var(--rz-success-lighter);

  .go-corner {
    opacity: 0.7;
  }

  &:hover {
    border: 1px solid #00838d;
    box-shadow: 0px 0px 999px 999px rgba(255, 255, 255, 0.5);
    z-index: 500;
  }
}

.card3:hover {
  h3 {
    transition: all 0.3s ease-out;
    color: #ffffff;
  }
  p {
    transition: all 0.3s ease-out;
    color: #ffffff;
  }
  .go-corner {
    transition: opactiy 0.3s linear;
    opacity: 1;
  }
}

</style>

@if (CardType == CardTypeEnum.Default)
{
    <a class="card1" href="@UrlPath">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10px">
            <RadzenImage Path="@ImagePath" Style="width: 50px; height: 50px;" />
            <div>
                <h3>@Title</h3>
                <p class="small">@Description</p>
            </div>
        </RadzenStack>
        <div class="go-corner">
            <div class="go-arrow">
                →
            </div>
        </div>
    </a>
}
else if (CardType == CardTypeEnum.Overload)
{
    <a class="card2" href="@UrlPath">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10px">
            <RadzenImage Path="@ImagePath" Style="width: 50px; height: 50px;" />
            <div>
                <h3>@Title</h3>
                <p class="small">@Description</p>
            </div>
        </RadzenStack>
        <div class="go-corner">
            <div class="go-arrow">
                →
            </div>
        </div>
    </a>
}
else if (CardType == CardTypeEnum.OverloadOpacity)
{
    <a class="card3" href="@UrlPath">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10px">
            <RadzenImage Path="@ImagePath" Style="width: 50px; height: 50px;" />
            <div>
                <h3>@Title</h3>
                <p class="small">@Description</p>
            </div>
        </RadzenStack>
        <div class="dimmer"></div>
        <div class="go-corner">
            <div class="go-arrow">
                →
            </div>
        </div>
    </a>
}

@code {
    public enum CardTypeEnum
    {
        Default,
        Overload,
        OverloadOpacity
    }

    [Parameter]
    public CardTypeEnum CardType { get; set; } = CardTypeEnum.Default;

    [Parameter]
    public string Title { get; set; } = "Title";

    [Parameter]
    public string Description { get; set; } = "Description";

    [Parameter]
    public string UrlPath { get; set; } = "/";

    [Parameter]
    public string ImagePath { get; set; } = "";
}